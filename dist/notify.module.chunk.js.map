{"version":3,"sources":["P:/uniformPortal/src/app/pages/ui-elements/advance/notify/notify.component.css","P:/uniformPortal/src/app/pages/ui-elements/advance/notify/notify.component.html","P:/uniformPortal/src/app/pages/ui-elements/advance/notify/notify.component.ts","P:/uniformPortal/src/app/pages/ui-elements/advance/notify/notify.module.ts","P:/uniformPortal/node_modules/angular2-notifications/dist/index.js","P:/uniformPortal/node_modules/angular2-notifications/dist/src/push-notifications.module.js","P:/uniformPortal/node_modules/angular2-notifications/dist/src/push-notifications/services/push-notifications.service.js","P:/uniformPortal/node_modules/angular2-notifications/dist/src/simple-notifications.module.js","P:/uniformPortal/node_modules/angular2-notifications/dist/src/simple-notifications/components/notification.component.js","P:/uniformPortal/node_modules/angular2-notifications/dist/src/simple-notifications/components/simple-notifications.component.js","P:/uniformPortal/node_modules/angular2-notifications/dist/src/simple-notifications/interfaces/icons.js","P:/uniformPortal/node_modules/angular2-notifications/dist/src/simple-notifications/pipes/max.pipe.js","P:/uniformPortal/node_modules/angular2-notifications/dist/src/simple-notifications/services/notifications.service.js"],"names":[],"mappings":"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A;AACA;AACA;AACA;AACA;AACA,8DAA8D,kCAAkC,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kBAAkB,4BAA4B,EAAE;AACrF,sCAAsC,kBAAkB,4BAA4B,EAAE;AACtF,sCAAsC,mBAAmB,4BAA4B,EAAE;AACvF,qCAAqC,uBAAuB;AAC5D,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,KAAK,0BAA0B;AAC/B;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,sD;;;;;;;;AC1CA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA,wDAAwD,WAAW;AACnE;AACA,uD;;;;;;;;AC3CA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,wFAAwF,EAAE;AACtI;AACA,gDAAgD,uBAAuB,EAAE;AACzE;AACA;AACA,oDAAoD,iDAAiD,EAAE;AACvG;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,8DAA8D,EAAE;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,yDAAyD,EAAE;AAC3G,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4EAA4E,yCAAyC;AACrH;AACA,gDAAgD,0CAA0C;AAC1F;AACA;AACA,+EAA+E,2CAA2C;AAC1H;AACA,gDAAgD,yCAAyC;AACzF;AACA;AACA;AACA,2EAA2E,yCAAyC;AACpH;AACA,gDAAgD,2CAA2C;AAC3F;AACA;AACA,8EAA8E,0CAA0C;AACxH;AACA,gDAAgD,yCAAyC;AACzF;AACA;AACA;AACA,wEAAwE,oCAAoC;AAC5G;AACA,gDAAgD,oCAAoC;AACpF;AACA;AACA,2EAA2E,oCAAoC;AAC/G;AACA,gDAAgD,oCAAoC;AACpF;AACA;AACA;AACA,yEAAyE,wCAAwC;AACjH;AACA,gDAAgD,wCAAwC;AACxF;AACA;AACA,4EAA4E,yCAAyC;AACrH;AACA,gDAAgD,wCAAwC;AACxF;AACA;AACA;AACA;AACA,yNAAyN,oVAAoV,2KAA2K,YAAY,oDAAoD,8BAA8B,uTAAuT,6BAA6B;AAC1oC,0DAA0D,0BAA0B,iCAAiC,qCAAqC,iCAAiC,0BAA0B,kCAAkC,0BAA0B,8BAA8B,mCAAmC,WAAW,4CAA4C,wBAAwB,kCAAkC,gCAAgC,8BAA8B,WAAW,8CAA8C,wBAAwB,8BAA8B,kCAAkC,gCAAgC,WAAW,wCAAwC,iCAAiC,qCAAqC,qBAAqB,uBAAuB,0BAA0B,2BAA2B,4BAA4B,WAAW,4CAA4C,yBAAyB,0BAA0B,2BAA2B,WAAW,8CAA8C,yBAAyB,WAAW,2CAA2C,6BAA6B,WAAW,uDAAuD,kCAAkC,WAAW,+CAA+C,sBAAsB,0BAA0B,WAAW,wCAAwC,qBAAqB,EAAE,wCAAwC,qBAAqB,EAAE,sCAAsC,qBAAqB,EAAE,qCAAqC,qBAAqB,EAAE,qCAAqC,qBAAqB,EAAE,sDAAsD,iCAAiC,qBAAqB,sBAAsB,0BAA0B,0BAA0B,WAAW,2DAA2D,0BAA0B,2BAA2B,WAAW,mEAAmE,qBAAqB,EAAE,+DAA+D,qBAAqB,EAAE,+DAA+D,qBAAqB,EAAE,8DAA8D,qBAAqB,EAAE,8DAA8D,qBAAqB,EAAE,8DAA8D,kBAAkB,EAAE,qDAAqD,aAAa,EAAE,qDAAqD,aAAa,EAAE;AACpqF,aAAa,IAAI;AACjB;AACA;AACA,oDAAoD;AACpD,KAAK,sDAAsD;AAC3D,KAAK,yCAAyC;AAC9C,KAAK,uBAAuB;AAC5B,EAAE;AACF;AACA,iBAAiB,qBAAqB;AACtC,yBAAyB,qBAAqB;AAC9C,sBAAsB,qBAAqB;AAC3C,sBAAsB,qBAAqB;AAC3C,mBAAmB,qBAAqB;AACxC,kBAAkB,qBAAqB;AACvC,aAAa,qBAAqB;AAClC,iBAAiB,qBAAqB;AACtC,kBAAkB,qBAAqB;AACvC,cAAc,qBAAqB;AACnC;AACA;AACA,kD;;;;;;;;AC3KA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA,2LAA2L;AAC3L,kEAAkE,8BAA8B,2BAA2B,4BAA4B,WAAW,uDAAuD,YAAY,EAAE,4CAA4C,WAAW,EAAE,8CAA8C,aAAa,EAAE,+CAA+C,cAAc,EAAE,+CAA+C,4CAA4C,8BAA8B,6BAA6B,8BAA8B,eAAe,WAAW;AAC1mB,aAAa,IAAI;AACjB;AACA;AACA,2DAA2D;AAC3D,KAAK,sDAAsD;AAC3D,EAAE;AACF;AACA,iBAAiB,qBAAqB;AACtC,kBAAkB,sBAAsB;AACxC,mBAAmB,sBAAsB;AACzC;AACA;AACA,0D;;;;;;;;AChMA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;ACTA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,4BAA4B,cAAc,IAAI;AACnD;AACA;AACA,sCAAsC,WAAW;AACjD;AACA,oC;;;;;;;;AC7BA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sDAAsD;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sGAAsG;AAC/H;AACA;AACA,yBAAyB,kGAAkG;AAC3H;AACA;AACA,yBAAyB,kGAAkG;AAC3H;AACA;AACA,yBAAyB,gGAAgG;AACzH;AACA;AACA,yBAAyB,gGAAgG;AACzH;AACA;AACA,yBAAyB,uFAAuF;AAChH;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C,8BAA8B,kBAAkB;AAChD,yBAAyB,yFAAyF;AAClH;AACA;AACA;AACA,8BAA8B,kBAAkB;AAChD,yBAAyB,2DAA2D;AACpF;AACA;AACA;AACA;AACA,+BAA+B,2BAA2B;AAC1D;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA,CAAC;AACD;AACA,KAAK,0BAA0B;AAC/B;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,iD","file":"notify.module.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// P:/uniformPortal/src/app/pages/ui-elements/advance/notify/notify.component.css\n// module id = ../../../../../src/app/pages/ui-elements/advance/notify/notify.component.css\n// module chunks = notify.module","module.exports = \"<simple-notifications [options]=\\\"options\\\"></simple-notifications>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <!-- Basic notifications card start -->\\n    <app-card [title]=\\\"'Basic notifications'\\\" [blockClass]=\\\"'table-border-style'\\\">\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table\\\">\\n          <tbody>\\n          <tr>\\n            <td>Primary Notice</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" (click)=\\\"addNotify({title:'PNotify', msg: 'Check me out! I\\\\'m a notice.', type:'crate', subType: 'warn'})\\\">Warning <i class=\\\"icofont icofont-play-alt-2\\\"></i></button>\\n            </td>\\n            <td>Use type <code>warn</code> to use this style notification</td>\\n          </tr>\\n          <tr>\\n            <td>Success Notice</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"addNotify({title:'PNotify', msg: 'Check me out! I\\\\'m a notice.', type:'success'})\\\">Success <i class=\\\"icofont icofont-play-alt-2\\\"></i></button>\\n            </td>\\n            <td>Use type <code>success</code> to use this style notification</td>\\n          </tr>\\n          <tr>\\n            <td>Info Notice</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" (click)=\\\"addNotify({title:'PNotify', msg: 'Check me out! I\\\\'m a notice.', type:'info'})\\\">Info <i class=\\\"icofont icofont-play-alt-2\\\"></i></button>\\n            </td>\\n            <td>Use type <code>info</code> to use this style notification</td>\\n          </tr>\\n          <tr>\\n            <td>Danger Notice</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"addNotify({title:'PNotify', msg: 'Check me out! I\\\\'m a notice.', type:'error'})\\\">Danger <i class=\\\"icofont icofont-play-alt-2\\\"></i></button>\\n            </td>\\n            <td>Use type <code>danger</code> to use this style notification</td>\\n          </tr>\\n          <!-- basic notification end -->\\n          </tbody>\\n        </table>\\n      </div>\\n    </app-card>\\n    <!-- Basic notifications card end -->\\n  </div>\\n  <div class=\\\"col-sm-12\\\">\\n    <!-- Basic notifications card start -->\\n    <app-card [title]=\\\"'Animate notifications'\\\" [blockClass]=\\\"'table-border-style'\\\">\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table\\\">\\n          <tbody>\\n          <tr>\\n            <td>fromRight Notice</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addNotify({title:'PNotify', msg: 'Check me out! I\\\\'m a notice.', type:'info', animate: 'fromRight'})\\\">Default/fromRight <i class=\\\"icofont icofont-play-alt-2\\\"></i></button>\\n            </td>\\n            <td>Use animate <code>fromRight</code> to use this style notification</td>\\n          </tr>\\n          <tr>\\n            <td>fromLeft Notice</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addNotify({title:'PNotify', msg: 'Check me out! I\\\\'m a notice.', type:'info', animate: 'fromLeft'})\\\">fromLeft <i class=\\\"icofont icofont-play-alt-2\\\"></i></button>\\n            </td>\\n            <td>Use animate <code>fromLeft</code> to use this style notification</td>\\n          </tr>\\n          <tr>\\n            <td>Sacle Notice</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addNotify({title:'PNotify', msg: 'Check me out! I\\\\'m a notice.', type:'info', animate: 'scale'})\\\">Scale <i class=\\\"icofont icofont-play-alt-2\\\"></i></button>\\n            </td>\\n            <td>Use animate <code>scale</code> to use this style notification</td>\\n          </tr>\\n          <tr>\\n            <td>Rotate Notice</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addNotify({title:'PNotify', msg: 'Check me out! I\\\\'m a notice.', type:'info', animate: 'rotate'})\\\">Rotate <i class=\\\"icofont icofont-play-alt-2\\\"></i></button>\\n            </td>\\n            <td>Use animate <code>rotate</code> to use this style notification</td>\\n          </tr>\\n          <!-- basic notification end -->\\n          </tbody>\\n        </table>\\n      </div>\\n    </app-card>\\n    <!-- Basic notifications card end -->\\n  </div>\\n  <div class=\\\"col-sm-12\\\">\\n    <!-- notifications option start -->\\n    <app-card [title]=\\\"'Options notifications'\\\" [blockClass]=\\\"'table-border-style'\\\">\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table\\\">\\n          <tbody>\\n          <tr>\\n            <td>No Title</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addNotify({msg: 'Check me out! - no title', type:'info', animate: 'fromRight', theClass:'small-icon'})\\\">No Title <i class=\\\"icofont icofont-play-alt-2\\\"></i></button>\\n            </td>\\n            <td>Use title <code>null or not use 'title' input</code> to use this style notification</td>\\n          </tr>\\n          <tr>\\n            <td>No Message</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addNotify({title: 'Only Title', type:'info', animate: 'fromRight', theClass:'small-icon'})\\\">No Message <i class=\\\"icofont icofont-play-alt-2\\\"></i></button>\\n            </td>\\n            <td>Use msg <code>not use 'msg' input</code> to use this style notification</td>\\n          </tr>\\n          <tr>\\n            <td>Small Icon</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addNotify({title: 'Small Icon', msg: 'Check me out! I\\\\'m a notice.', type:'info', animate: 'fromRight', theClass:'small-icon'})\\\">Small Icon <i class=\\\"icofont icofont-play-alt-2\\\"></i></button>\\n            </td>\\n            <td>Use theClass <code>small-icon</code> to use this style notification</td>\\n          </tr>\\n          <tr>\\n            <td>No Icon</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addNotify({title: 'No Icon', msg: 'Check me out! I\\\\'m a notice.', type:'info', animate: 'fromRight', theClass:'no-icon'})\\\">No Icon <i class=\\\"icofont icofont-play-alt-2\\\"></i></button>\\n            </td>\\n            <td>Use theClass <code>no-icon</code> to use this style notification</td>\\n          </tr>\\n          <tr>\\n            <td>Click To Close</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addNotify({title: 'Click To Close', msg: 'Check me out! I\\\\'m a notice.', type:'info', animate: 'fromRight', clickToClose: true})\\\"> Click to close <i class=\\\"icofont icofont-play-alt-2\\\"></i></button>\\n            </td>\\n            <td>Use clickToClose <code>true/false</code> to use this style notification</td>\\n          </tr>\\n          <tr>\\n            <td>Show Progress</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addNotify({title: 'Show Progress', msg: 'Check me out! I\\\\'m a notice.', type:'info', animate: 'fromRight', timeOut:2000, pauseOnHover:false, showProgressBar: true})\\\"> Show Progress <i class=\\\"icofont icofont-play-alt-2\\\"></i></button>\\n            </td>\\n            <td>Use showProgressBar<code>true</code> to use this style notification</td>\\n          </tr>\\n          <tr>\\n            <td>Pus On Hover</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addNotify({title: 'Push On Hover', msg: 'Check me out! I\\\\'m a notice.', type:'info', animate: 'fromRight', timeOut:2000, pauseOnHover:true, showProgressBar: true})\\\"> Push On Hover <i class=\\\"icofont icofont-play-alt-2\\\"></i></button>\\n            </td>\\n            <td>Use pauseOnHover<code>true</code> to use this style notification</td>\\n          </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </app-card>\\n    <!-- notifications option end -->\\n  </div>\\n  <div class=\\\"col-sm-12\\\">\\n    <!-- notifications position start -->\\n    <app-card [title]=\\\"'notifications position'\\\" [blockClass]=\\\"'table-border-style'\\\">\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table\\\">\\n          <tbody>\\n          <tr>\\n            <td>Top Left</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addNotify({title: 'Top Left', msg: 'Check me out! I\\\\'m a notice.', type:'info', animate: 'fromRight', position1: 'top', position2: 'left', maxStack: 1})\\\">Top Left <i class=\\\"icofont icofont-play-alt-2\\\"></i></button>\\n            </td>\\n            <td>Use position1 <code>top</code> position2 <code>left</code> to use this style notification</td>\\n          </tr>\\n          <tr>\\n            <td>Top Right</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addNotify({title: 'Top Right', msg: 'Check me out! I\\\\'m a notice.', type:'info', animate: 'fromRight', position1: 'top', position2: 'right', maxStack: 1})\\\">Top Right <i class=\\\"icofont icofont-play-alt-2\\\"></i></button>\\n            </td>\\n            <td>Use position1 <code>top</code> position2 <code>right</code> to use this style notification</td>\\n          </tr>\\n          <tr>\\n            <td>Bottom Left</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addNotify({title: 'Bottom Left', msg: 'Check me out! I\\\\'m a notice.', type:'info', animate: 'fromRight', position1: 'bottom', position2: 'left', maxStack: 1})\\\">Bottom Left <i class=\\\"icofont icofont-play-alt-2\\\"></i></button>\\n            </td>\\n            <td>Use position1 <code>bottom</code> position2 <code>left</code> to use this style notification</td>\\n          </tr>\\n          <tr>\\n            <td>Bottom Right</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addNotify({title: 'Bottom Right', msg: 'Check me out! I\\\\'m a notice.', type:'info', animate: 'fromRight', position1: 'bottom', position2: 'right', maxStack: 1})\\\">Bottom Right <i class=\\\"icofont icofont-play-alt-2\\\"></i></button>\\n            </td>\\n            <td>Use position1 <code>bottom</code> position2 <code>right</code> to use this style notification</td>\\n          </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </app-card>\\n    <!-- notifications option end -->\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// P:/uniformPortal/src/app/pages/ui-elements/advance/notify/notify.component.html\n// module id = ../../../../../src/app/pages/ui-elements/advance/notify/notify.component.html\n// module chunks = notify.module","import { Component, OnInit } from '@angular/core';\nimport {NotificationsService} from 'angular2-notifications/dist';\n\n@Component({\n  selector: 'app-notify',\n  templateUrl: './notify.component.html',\n  styleUrls: ['./notify.component.css']\n})\nexport class NotifyComponent implements OnInit {\n  options: any = {\n    position: ['bottom', 'right'],\n  };\n\n  position1 = 'bottom';\n  position2 = 'right';\n  timeOut = 1000;\n  showProgressBar = true;\n  pauseOnHover = true;\n  lastOnBottom = true;\n  clickToClose = true;\n  maxLength = 0;\n  maxStack = 8;\n  preventDuplicates = false;\n  preventLastDuplicates = false;\n  theClass: string;\n  rtl = false;\n  animate = 'fromRight';\n  icons: string;\n  subType = 'success';\n\n  title: string;\n  msg: string;\n\n  constructor(private servicePNotify: NotificationsService) { }\n\n  ngOnInit() {\n  }\n\n  addNotify(options) {\n    this.servicePNotify.remove();\n    this.options  = {\n      position : [\n        ('position1' in options) ? options.position1 : this.position1,\n        ('position2' in options) ? options.position2 : this.position2\n      ],\n      maxStack: ('maxStack' in options) ? options.maxStack : this.maxStack,\n      timeOut: options.timeOut ? options.timeOut : this.timeOut,\n      showProgressBar: ('showProgressBar' in options) ? options.showProgressBar : this.showProgressBar,\n      pauseOnHover: ('pauseOnHover' in options) ? options.pauseOnHover : this.pauseOnHover,\n      lastOnBottom: ('lastOnBottom' in options) ? options.lastOnBottom : this.lastOnBottom,\n      clickToClose: ('clickToClose' in options) ? options.clickToClose : this.clickToClose,\n      maxLength: options.maxLength ? options.maxLength : this.maxLength,\n      preventDuplicates: ('preventDuplicates' in options) ? options.preventDuplicates : this.preventDuplicates,\n      preventLastDuplicates: ('preventLastDuplicates' in options) ? options.preventLastDuplicates : this.preventLastDuplicates,\n      theClass: options.theClass ? options.theClass : this.theClass,\n      rtl: ('rtl' in options) ? options.rtl : this.rtl,\n      animate: options.animate ? options.animate : this.animate,\n      icons: options.icons ? options.icons : this.icons\n    };\n\n    switch (options.type) {\n      case 'success':\n        this.servicePNotify.success(\n          options.title ? options.title : this.title,\n          options.msg ? options.msg : this.msg\n        );\n        break;\n      case 'error':\n        this.servicePNotify.error(\n          options.title ? options.title : this.title,\n          options.msg ? options.msg : this.msg\n        );\n        break;\n      case 'alert':\n        this.servicePNotify.error(\n          options.title ? options.title : this.title,\n          options.msg ? options.msg : this.msg\n        );\n        break;\n      case 'warn':\n        this.servicePNotify.error(\n          options.title ? options.title : this.title,\n          options.msg ? options.msg : this.msg\n        );\n        break;\n      case 'info':\n        this.servicePNotify.info(\n          options.title ? options.title : this.title,\n          options.msg ? options.msg : this.msg\n        );\n        break;\n      case 'create':\n        this.servicePNotify.create(\n          options.title ? options.title : this.title,\n          options.msg ? options.msg : this.msg,\n          options.type ? options.type : this.subType\n        );\n        break;\n      case 'html':\n        this.servicePNotify.html(\n          options.title ? options.title : this.title,\n          options.msg ? options.msg : this.msg\n        );\n        break;\n      default:\n        this.servicePNotify.alert(\n          options.title ? options.title : this.title,\n          options.msg ? options.msg : this.msg\n        );\n        break;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// P:/uniformPortal/src/app/pages/ui-elements/advance/notify/notify.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotifyComponent } from './notify.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {SharedModule} from '../../../../shared/shared.module';\nimport {SimpleNotificationsModule} from 'angular2-notifications/dist';\n\nexport const notifyRoutes: Routes = [\n  {\n    path: '',\n    component: NotifyComponent,\n    data: {\n      breadcrumb: 'PNOTIFY',\n      icon: 'icofont-listine-dots bg-c-pink',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(notifyRoutes),\n    SharedModule,\n    SimpleNotificationsModule.forRoot()\n  ],\n  declarations: [NotifyComponent]\n})\nexport class NotifyModule { }\n\n\n\n// WEBPACK FOOTER //\n// P:/uniformPortal/src/app/pages/ui-elements/advance/notify/notify.module.ts","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./src/push-notifications.module\"));\r\n__export(require(\"./src/simple-notifications.module\"));\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// P:/uniformPortal/node_modules/angular2-notifications/dist/index.js\n// module id = ../../../../angular2-notifications/dist/index.js\n// module chunks = notify.module","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar push_notifications_service_1 = require(\"./push-notifications/services/push-notifications.service\");\r\n__export(require(\"./push-notifications/services/push-notifications.service\"));\r\nvar PushNotificationsModule = (function () {\r\n    function PushNotificationsModule() {\r\n    }\r\n    return PushNotificationsModule;\r\n}());\r\nPushNotificationsModule.decorators = [\r\n    { type: core_1.NgModule, args: [{\r\n                providers: [push_notifications_service_1.PushNotificationsService],\r\n                exports: []\r\n            },] },\r\n];\r\n/** @nocollapse */\r\nPushNotificationsModule.ctorParameters = function () { return []; };\r\nexports.PushNotificationsModule = PushNotificationsModule;\r\n//# sourceMappingURL=push-notifications.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// P:/uniformPortal/node_modules/angular2-notifications/dist/src/push-notifications.module.js\n// module id = ../../../../angular2-notifications/dist/src/push-notifications.module.js\n// module chunks = notify.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar Observable_1 = require(\"rxjs/Observable\");\r\nvar PushNotificationsService = (function () {\r\n    function PushNotificationsService() {\r\n        this.permission = this.isSupported() ? Notification.permission : 'denied';\r\n    }\r\n    PushNotificationsService.prototype.requestPermission = function () {\r\n        var _this = this;\r\n        if ('Notification' in window)\r\n            Notification.requestPermission(function (status) { return _this.permission = status; });\r\n    };\r\n    PushNotificationsService.prototype.isSupported = function () {\r\n        return 'Notification' in window;\r\n    };\r\n    PushNotificationsService.prototype.create = function (title, options) {\r\n        var _this = this;\r\n        return new Observable_1.Observable(function (obs) {\r\n            if (!('Notification' in window)) {\r\n                obs.error('Notifications are not available in this environment');\r\n                obs.complete();\r\n            }\r\n            if (_this.permission !== 'granted') {\r\n                obs.error(\"The user hasn't granted you permission to send push notifications\");\r\n                obs.complete();\r\n            }\r\n            var n = new Notification(title, options);\r\n            n.onshow = function (e) { return obs.next({ notification: n, event: e }); };\r\n            n.onclick = function (e) { return obs.next({ notification: n, event: e }); };\r\n            n.onerror = function (e) { return obs.error({ notification: n, event: e }); };\r\n            n.onclose = function () { return obs.complete(); };\r\n        });\r\n    };\r\n    return PushNotificationsService;\r\n}());\r\nPushNotificationsService.decorators = [\r\n    { type: core_1.Injectable },\r\n];\r\n/** @nocollapse */\r\nPushNotificationsService.ctorParameters = function () { return []; };\r\nexports.PushNotificationsService = PushNotificationsService;\r\n//# sourceMappingURL=push-notifications.service.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// P:/uniformPortal/node_modules/angular2-notifications/dist/src/push-notifications/services/push-notifications.service.js\n// module id = ../../../../angular2-notifications/dist/src/push-notifications/services/push-notifications.service.js\n// module chunks = notify.module","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar common_1 = require(\"@angular/common\");\r\nvar simple_notifications_component_1 = require(\"./simple-notifications/components/simple-notifications.component\");\r\nvar notification_component_1 = require(\"./simple-notifications/components/notification.component\");\r\nvar max_pipe_1 = require(\"./simple-notifications/pipes/max.pipe\");\r\nvar notifications_service_1 = require(\"./simple-notifications/services/notifications.service\");\r\n__export(require(\"./simple-notifications/interfaces/icons\"));\r\n__export(require(\"./simple-notifications/components/simple-notifications.component\"));\r\n__export(require(\"./simple-notifications/components/notification.component\"));\r\n__export(require(\"./simple-notifications/pipes/max.pipe\"));\r\n__export(require(\"./simple-notifications/services/notifications.service\"));\r\nvar SimpleNotificationsModule = (function () {\r\n    function SimpleNotificationsModule() {\r\n    }\r\n    SimpleNotificationsModule.forRoot = function () {\r\n        return {\r\n            ngModule: SimpleNotificationsModule,\r\n        };\r\n    };\r\n    return SimpleNotificationsModule;\r\n}());\r\nSimpleNotificationsModule.decorators = [\r\n    { type: core_1.NgModule, args: [{\r\n                providers: [notifications_service_1.NotificationsService],\r\n                imports: [\r\n                    common_1.CommonModule\r\n                ],\r\n                declarations: [\r\n                    simple_notifications_component_1.SimpleNotificationsComponent,\r\n                    notification_component_1.NotificationComponent,\r\n                    max_pipe_1.MaxPipe\r\n                ],\r\n                exports: [simple_notifications_component_1.SimpleNotificationsComponent]\r\n            },] },\r\n];\r\n/** @nocollapse */\r\nSimpleNotificationsModule.ctorParameters = function () { return []; };\r\nexports.SimpleNotificationsModule = SimpleNotificationsModule;\r\n//# sourceMappingURL=simple-notifications.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// P:/uniformPortal/node_modules/angular2-notifications/dist/src/simple-notifications.module.js\n// module id = ../../../../angular2-notifications/dist/src/simple-notifications.module.js\n// module chunks = notify.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar animations_1 = require(\"@angular/animations\");\r\nvar platform_browser_1 = require(\"@angular/platform-browser\");\r\nvar notifications_service_1 = require(\"../services/notifications.service\");\r\nvar NotificationComponent = (function () {\r\n    function NotificationComponent(notificationService, domSanitizer, zone) {\r\n        var _this = this;\r\n        this.notificationService = notificationService;\r\n        this.domSanitizer = domSanitizer;\r\n        this.zone = zone;\r\n        // Progress bar variables\r\n        this.progressWidth = 0;\r\n        this.stopTime = false;\r\n        this.count = 0;\r\n        this.instance = function () {\r\n            _this.zone.runOutsideAngular(function () {\r\n                _this.zone.run(function () { return _this.diff = (new Date().getTime() - _this.start) - (_this.count * _this.speed); });\r\n                if (_this.count++ === _this.steps)\r\n                    _this.zone.run(function () { return _this.remove(); });\r\n                else if (!_this.stopTime) {\r\n                    if (_this.showProgressBar)\r\n                        _this.zone.run(function () { return _this.progressWidth += 100 / _this.steps; });\r\n                    _this.timer = setTimeout(_this.instance, (_this.speed - _this.diff));\r\n                }\r\n            });\r\n        };\r\n    }\r\n    NotificationComponent.prototype.ngOnInit = function () {\r\n        if (this.item.override) {\r\n            this.attachOverrides();\r\n        }\r\n        if (this.animate) {\r\n            this.item.state = this.animate;\r\n        }\r\n        if (this.timeOut !== 0) {\r\n            this.startTimeOut();\r\n        }\r\n        this.safeSvg = this.domSanitizer.bypassSecurityTrustHtml(this.icon || this.item.icon);\r\n    };\r\n    NotificationComponent.prototype.startTimeOut = function () {\r\n        var _this = this;\r\n        this.steps = this.timeOut / 10;\r\n        this.speed = this.timeOut / this.steps;\r\n        this.start = new Date().getTime();\r\n        this.zone.runOutsideAngular(function () { return _this.timer = setTimeout(_this.instance, _this.speed); });\r\n    };\r\n    NotificationComponent.prototype.onEnter = function () {\r\n        if (this.pauseOnHover) {\r\n            this.stopTime = true;\r\n        }\r\n    };\r\n    NotificationComponent.prototype.onLeave = function () {\r\n        if (this.pauseOnHover) {\r\n            this.stopTime = false;\r\n            setTimeout(this.instance, (this.speed - this.diff));\r\n        }\r\n    };\r\n    NotificationComponent.prototype.setPosition = function () {\r\n        return this.position !== 0 ? this.position * 90 : 0;\r\n    };\r\n    NotificationComponent.prototype.onClick = function ($e) {\r\n        this.item.click.emit($e);\r\n        if (this.clickToClose) {\r\n            this.remove();\r\n        }\r\n    };\r\n    // Attach all the overrides\r\n    NotificationComponent.prototype.attachOverrides = function () {\r\n        var _this = this;\r\n        Object.keys(this.item.override).forEach(function (a) {\r\n            if (_this.hasOwnProperty(a)) {\r\n                _this[a] = _this.item.override[a];\r\n            }\r\n        });\r\n    };\r\n    NotificationComponent.prototype.ngOnDestroy = function () {\r\n        clearTimeout(this.timer);\r\n    };\r\n    NotificationComponent.prototype.remove = function () {\r\n        var _this = this;\r\n        if (this.animate) {\r\n            this.item.state = this.animate + 'Out';\r\n            this.zone.runOutsideAngular(function () {\r\n                setTimeout(function () {\r\n                    _this.zone.run(function () { return _this.notificationService.set(_this.item, false); });\r\n                }, 310);\r\n            });\r\n        }\r\n        else {\r\n            this.notificationService.set(this.item, false);\r\n        }\r\n    };\r\n    return NotificationComponent;\r\n}());\r\nNotificationComponent.decorators = [\r\n    { type: core_1.Component, args: [{\r\n                selector: 'simple-notification',\r\n                encapsulation: core_1.ViewEncapsulation.None,\r\n                animations: [\r\n                    animations_1.trigger('enterLeave', [\r\n                        // Enter from right\r\n                        animations_1.state('fromRight', animations_1.style({ opacity: 1, transform: 'translateX(0)' })),\r\n                        animations_1.transition('* => fromRight', [\r\n                            animations_1.style({ opacity: 0, transform: 'translateX(5%)' }),\r\n                            animations_1.animate('400ms ease-in-out')\r\n                        ]),\r\n                        animations_1.state('fromRightOut', animations_1.style({ opacity: 0, transform: 'translateX(-5%)' })),\r\n                        animations_1.transition('fromRight => fromRightOut', [\r\n                            animations_1.style({ opacity: 1, transform: 'translateX(0)' }),\r\n                            animations_1.animate('300ms ease-in-out')\r\n                        ]),\r\n                        // Enter from left\r\n                        animations_1.state('fromLeft', animations_1.style({ opacity: 1, transform: 'translateX(0)' })),\r\n                        animations_1.transition('* => fromLeft', [\r\n                            animations_1.style({ opacity: 0, transform: 'translateX(-5%)' }),\r\n                            animations_1.animate('400ms ease-in-out')\r\n                        ]),\r\n                        animations_1.state('fromLeftOut', animations_1.style({ opacity: 0, transform: 'translateX(5%)' })),\r\n                        animations_1.transition('fromLeft => fromLeftOut', [\r\n                            animations_1.style({ opacity: 1, transform: 'translateX(0)' }),\r\n                            animations_1.animate('300ms ease-in-out')\r\n                        ]),\r\n                        // Rotate\r\n                        animations_1.state('scale', animations_1.style({ opacity: 1, transform: 'scale(1)' })),\r\n                        animations_1.transition('* => scale', [\r\n                            animations_1.style({ opacity: 0, transform: 'scale(0)' }),\r\n                            animations_1.animate('400ms ease-in-out')\r\n                        ]),\r\n                        animations_1.state('scaleOut', animations_1.style({ opacity: 0, transform: 'scale(0)' })),\r\n                        animations_1.transition('scale => scaleOut', [\r\n                            animations_1.style({ opacity: 1, transform: 'scale(1)' }),\r\n                            animations_1.animate('400ms ease-in-out')\r\n                        ]),\r\n                        // Scale\r\n                        animations_1.state('rotate', animations_1.style({ opacity: 1, transform: 'rotate(0deg)' })),\r\n                        animations_1.transition('* => rotate', [\r\n                            animations_1.style({ opacity: 0, transform: 'rotate(5deg)' }),\r\n                            animations_1.animate('400ms ease-in-out')\r\n                        ]),\r\n                        animations_1.state('rotateOut', animations_1.style({ opacity: 0, transform: 'rotate(-5deg)' })),\r\n                        animations_1.transition('rotate => rotateOut', [\r\n                            animations_1.style({ opacity: 1, transform: 'rotate(0deg)' }),\r\n                            animations_1.animate('400ms ease-in-out')\r\n                        ])\r\n                    ])\r\n                ],\r\n                template: \"\\n        <div class=\\\"simple-notification\\\"\\n            [@enterLeave]=\\\"item.state\\\"\\n            (click)=\\\"onClick($event)\\\"\\n            [class]=\\\"theClass\\\"\\n\\n            [ngClass]=\\\"{\\n                'alert': item.type === 'alert',\\n                'error': item.type === 'error',\\n                'warn': item.type === 'warn',\\n                'success': item.type === 'success',\\n                'info': item.type === 'info',\\n                'bare': item.type === 'bare',\\n                'rtl-mode': rtl\\n            }\\\"\\n\\n            (mouseenter)=\\\"onEnter()\\\"\\n            (mouseleave)=\\\"onLeave()\\\">\\n\\n            <div *ngIf=\\\"!item.html\\\">\\n                <div class=\\\"sn-title\\\">{{item.title}}</div>\\n                <div class=\\\"sn-content\\\">{{item.content | max:maxLength}}</div>\\n\\n                <div class=\\\"icon\\\" *ngIf=\\\"item.icon !== 'bare'\\\" [innerHTML]=\\\"safeSvg\\\"></div>\\n            </div>\\n            <div *ngIf=\\\"item.html\\\" [innerHTML]=\\\"item.html\\\"></div>\\n\\n            <div class=\\\"sn-progress-loader\\\" *ngIf=\\\"showProgressBar\\\">\\n                <span [ngStyle]=\\\"{'width': progressWidth + '%'}\\\"></span>\\n            </div>\\n\\n        </div>\\n    \",\r\n                styles: [\"\\n        .simple-notification {\\n            width: 100%;\\n            padding: 10px 20px;\\n            box-sizing: border-box;\\n            position: relative;\\n            float: left;\\n            margin-bottom: 10px;\\n            color: #fff;\\n            cursor: pointer;\\n            transition: all 0.5s;\\n        }\\n\\n        .simple-notification .sn-title {\\n            margin: 0;\\n            padding: 0 50px 0 0;\\n            line-height: 30px;\\n            font-size: 20px;\\n        }\\n\\n        .simple-notification .sn-content {\\n            margin: 0;\\n            font-size: 16px;\\n            padding: 0 50px 0 0;\\n            line-height: 20px;\\n        }\\n\\n        .simple-notification .icon {\\n            position: absolute;\\n            box-sizing: border-box;\\n            top: 0;\\n            right: 0;\\n            width: 70px;\\n            height: 70px;\\n            padding: 10px;\\n        }\\n\\n        .simple-notification .icon svg {\\n            fill: #fff;\\n            width: 100%;\\n            height: 100%;\\n        }\\n\\n        .simple-notification .icon svg g {\\n            fill: #fff;\\n        }\\n\\n        .simple-notification.rtl-mode {\\n            direction: rtl;\\n        }\\n\\n        .simple-notification.rtl-mode .sn-content {\\n            padding: 0 0 0 50px;\\n        }\\n\\n        .simple-notification.rtl-mode svg {\\n            left: 0;\\n            right: auto;\\n        }\\n\\n        .simple-notification.error { background: #F44336; }\\n        .simple-notification.success { background: #8BC34A; }\\n        .simple-notification.alert { background: #ffdb5b; }\\n        .simple-notification.info { background: #03A9F4; }\\n        .simple-notification.warn { background: #ffdb5b; }\\n\\n        .simple-notification .sn-progress-loader {\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 5px;\\n        }\\n\\n        .simple-notification .sn-progress-loader span {\\n            float: left;\\n            height: 100%;\\n        }\\n\\n        .simple-notification.success .sn-progress-loader span { background: #689F38; }\\n        .simple-notification.error .sn-progress-loader span { background: #D32F2F; }\\n        .simple-notification.alert .sn-progress-loader span { background: #edc242; }\\n        .simple-notification.info .sn-progress-loader span { background: #0288D1; }\\n        .simple-notification.warn .sn-progress-loader span { background: #edc242; }\\n        .simple-notification.bare .sn-progress-loader span { background: #ccc; }\\n\\n        .simple-notification.warn div .sn-title { color: #444; }\\n        .simple-notification.warn div .sn-content { color: #444; }\\n    \"]\r\n            },] },\r\n];\r\n/** @nocollapse */\r\nNotificationComponent.ctorParameters = function () { return [\r\n    { type: notifications_service_1.NotificationsService, },\r\n    { type: platform_browser_1.DomSanitizer, },\r\n    { type: core_1.NgZone, },\r\n]; };\r\nNotificationComponent.propDecorators = {\r\n    'timeOut': [{ type: core_1.Input },],\r\n    'showProgressBar': [{ type: core_1.Input },],\r\n    'pauseOnHover': [{ type: core_1.Input },],\r\n    'clickToClose': [{ type: core_1.Input },],\r\n    'maxLength': [{ type: core_1.Input },],\r\n    'theClass': [{ type: core_1.Input },],\r\n    'rtl': [{ type: core_1.Input },],\r\n    'animate': [{ type: core_1.Input },],\r\n    'position': [{ type: core_1.Input },],\r\n    'item': [{ type: core_1.Input },],\r\n};\r\nexports.NotificationComponent = NotificationComponent;\r\n//# sourceMappingURL=notification.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// P:/uniformPortal/node_modules/angular2-notifications/dist/src/simple-notifications/components/notification.component.js\n// module id = ../../../../angular2-notifications/dist/src/simple-notifications/components/notification.component.js\n// module chunks = notify.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar notifications_service_1 = require(\"../services/notifications.service\");\r\nvar SimpleNotificationsComponent = (function () {\r\n    function SimpleNotificationsComponent(_service) {\r\n        this._service = _service;\r\n        this.onCreate = new core_1.EventEmitter();\r\n        this.onDestroy = new core_1.EventEmitter();\r\n        this.notifications = [];\r\n        this.position = ['bottom', 'right'];\r\n        // Received values\r\n        this.lastOnBottom = true;\r\n        this.maxStack = 8;\r\n        this.preventLastDuplicates = false;\r\n        this.preventDuplicates = false;\r\n        // Sent values\r\n        this.timeOut = 0;\r\n        this.maxLength = 0;\r\n        this.clickToClose = true;\r\n        this.showProgressBar = true;\r\n        this.pauseOnHover = true;\r\n        this.theClass = '';\r\n        this.rtl = false;\r\n        this.animate = 'fromRight';\r\n    }\r\n    Object.defineProperty(SimpleNotificationsComponent.prototype, \"options\", {\r\n        set: function (opt) {\r\n            this.attachChanges(opt);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SimpleNotificationsComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        // Listen for changes in the service\r\n        this.listener = this._service.getChangeEmitter()\r\n            .subscribe(function (item) {\r\n            switch (item.command) {\r\n                case 'cleanAll':\r\n                    _this.notifications = [];\r\n                    break;\r\n                case 'clean':\r\n                    _this.cleanSingle(item.id);\r\n                    break;\r\n                case 'set':\r\n                    if (item.add)\r\n                        _this.add(item.notification);\r\n                    else\r\n                        _this.defaultBehavior(item);\r\n                    break;\r\n                default:\r\n                    _this.defaultBehavior(item);\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    // Default behavior on event\r\n    SimpleNotificationsComponent.prototype.defaultBehavior = function (value) {\r\n        this.notifications.splice(this.notifications.indexOf(value.notification), 1);\r\n        this.onDestroy.emit(this.buildEmit(value.notification, false));\r\n    };\r\n    // Add the new notification to the notification array\r\n    SimpleNotificationsComponent.prototype.add = function (item) {\r\n        item.createdOn = new Date();\r\n        var toBlock = this.preventLastDuplicates || this.preventDuplicates ? this.block(item) : false;\r\n        // Save this as the last created notification\r\n        this.lastNotificationCreated = item;\r\n        // Override icon if set\r\n        if (item.override && item.override.icons && item.override.icons[item.type]) {\r\n            item.icon = item.override.icons[item.type];\r\n        }\r\n        if (!toBlock) {\r\n            // Check if the notification should be added at the start or the end of the array\r\n            if (this.lastOnBottom) {\r\n                if (this.notifications.length >= this.maxStack)\r\n                    this.notifications.splice(0, 1);\r\n                this.notifications.push(item);\r\n            }\r\n            else {\r\n                if (this.notifications.length >= this.maxStack)\r\n                    this.notifications.splice(this.notifications.length - 1, 1);\r\n                this.notifications.splice(0, 0, item);\r\n            }\r\n            this.onCreate.emit(this.buildEmit(item, true));\r\n        }\r\n    };\r\n    // Check if notifications should be prevented\r\n    SimpleNotificationsComponent.prototype.block = function (item) {\r\n        var toCheck = item.html ? this.checkHtml : this.checkStandard;\r\n        if (this.preventDuplicates && this.notifications.length > 0) {\r\n            for (var i = 0; i < this.notifications.length; i++) {\r\n                if (toCheck(this.notifications[i], item)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (this.preventLastDuplicates) {\r\n            var comp = void 0;\r\n            if (this.preventLastDuplicates === 'visible' && this.notifications.length > 0) {\r\n                if (this.lastOnBottom) {\r\n                    comp = this.notifications[this.notifications.length - 1];\r\n                }\r\n                else {\r\n                    comp = this.notifications[0];\r\n                }\r\n            }\r\n            else if (this.preventLastDuplicates === 'all' && this.lastNotificationCreated) {\r\n                comp = this.lastNotificationCreated;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n            return toCheck(comp, item);\r\n        }\r\n        return false;\r\n    };\r\n    SimpleNotificationsComponent.prototype.checkStandard = function (checker, item) {\r\n        return checker.type === item.type && checker.title === item.title && checker.content === item.content;\r\n    };\r\n    SimpleNotificationsComponent.prototype.checkHtml = function (checker, item) {\r\n        return checker.html ? checker.type === item.type && checker.title === item.title && checker.content === item.content && checker.html === item.html : false;\r\n    };\r\n    // Attach all the changes received in the options object\r\n    SimpleNotificationsComponent.prototype.attachChanges = function (options) {\r\n        var _this = this;\r\n        Object.keys(options).forEach(function (a) {\r\n            if (_this.hasOwnProperty(a)) {\r\n                _this[a] = options[a];\r\n            }\r\n            else if (a === 'icons') {\r\n                _this._service.icons = options[a];\r\n            }\r\n        });\r\n    };\r\n    SimpleNotificationsComponent.prototype.buildEmit = function (notification, to) {\r\n        var toEmit = {\r\n            createdOn: notification.createdOn,\r\n            type: notification.type,\r\n            icon: notification.icon,\r\n            id: notification.id\r\n        };\r\n        if (notification.html) {\r\n            toEmit.html = notification.html;\r\n        }\r\n        else {\r\n            toEmit.title = notification.title;\r\n            toEmit.content = notification.content;\r\n        }\r\n        if (!to) {\r\n            toEmit.destroyedOn = new Date();\r\n        }\r\n        return toEmit;\r\n    };\r\n    SimpleNotificationsComponent.prototype.cleanSingle = function (id) {\r\n        var indexOfDelete = 0;\r\n        var doDelete = false;\r\n        this.notifications.forEach(function (notification, idx) {\r\n            if (notification.id === id) {\r\n                indexOfDelete = idx;\r\n                doDelete = true;\r\n            }\r\n        });\r\n        if (doDelete) {\r\n            this.notifications.splice(indexOfDelete, 1);\r\n        }\r\n    };\r\n    SimpleNotificationsComponent.prototype.ngOnDestroy = function () {\r\n        if (this.listener) {\r\n            this.listener.unsubscribe();\r\n        }\r\n    };\r\n    return SimpleNotificationsComponent;\r\n}());\r\nSimpleNotificationsComponent.decorators = [\r\n    { type: core_1.Component, args: [{\r\n                selector: 'simple-notifications',\r\n                encapsulation: core_1.ViewEncapsulation.None,\r\n                template: \"\\n        <div class=\\\"simple-notification-wrapper\\\" [ngClass]=\\\"position\\\">\\n            <simple-notification\\n                *ngFor=\\\"let a of notifications; let i = index\\\"\\n                [item]=\\\"a\\\"\\n                [timeOut]=\\\"timeOut\\\"\\n                [clickToClose]=\\\"clickToClose\\\"\\n                [maxLength]=\\\"maxLength\\\"\\n                [showProgressBar]=\\\"showProgressBar\\\"\\n                [pauseOnHover]=\\\"pauseOnHover\\\"\\n                [theClass]=\\\"theClass\\\"\\n                [rtl]=\\\"rtl\\\"\\n                [animate]=\\\"animate\\\"\\n                [position]=\\\"i\\\"\\n                >\\n            </simple-notification>\\n        </div>\\n    \",\r\n                styles: [\"\\n        .simple-notification-wrapper {\\n            position: fixed;\\n            width: 300px;\\n            z-index: 1000;\\n        }\\n        \\n        .simple-notification-wrapper.left { left: 20px; }\\n        .simple-notification-wrapper.top { top: 20px; }\\n        .simple-notification-wrapper.right { right: 20px; }\\n        .simple-notification-wrapper.bottom { bottom: 20px; }\\n        \\n        @media (max-width: 340px) {\\n            .simple-notification-wrapper {\\n                width: auto;\\n                left: 20px;\\n                right: 20px;\\n            }\\n        }\\n    \"]\r\n            },] },\r\n];\r\n/** @nocollapse */\r\nSimpleNotificationsComponent.ctorParameters = function () { return [\r\n    { type: notifications_service_1.NotificationsService, },\r\n]; };\r\nSimpleNotificationsComponent.propDecorators = {\r\n    'options': [{ type: core_1.Input },],\r\n    'onCreate': [{ type: core_1.Output },],\r\n    'onDestroy': [{ type: core_1.Output },],\r\n};\r\nexports.SimpleNotificationsComponent = SimpleNotificationsComponent;\r\n//# sourceMappingURL=simple-notifications.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// P:/uniformPortal/node_modules/angular2-notifications/dist/src/simple-notifications/components/simple-notifications.component.js\n// module id = ../../../../angular2-notifications/dist/src/simple-notifications/components/simple-notifications.component.js\n// module chunks = notify.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.defaultIcons = {\r\n    alert: \"\\n        <svg class=\\\"simple-notification-svg\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"#ffffff\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\">\\n            <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n            <path d=\\\"M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12.5 8H11v6l4.75 2.85.75-1.23-4-2.37V8zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\\\"/>\\n        </svg>\\n    \",\r\n    error: \"\\n        <svg class=\\\"simple-notification-svg\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"#ffffff\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\">\\n            <path d=\\\"M0 0h24v24H0V0z\\\" fill=\\\"none\\\"/>\\n            <path d=\\\"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\\\"/>\\n        </svg>\\n    \",\r\n    info: \"\\n        <svg class=\\\"simple-notification-svg\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"#ffffff\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\">\\n            <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n            <path d=\\\"M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z\\\"/>\\n        </svg>\\n    \",\r\n    success: \"\\n        <svg class=\\\"simple-notification-svg\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"#ffffff\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\">\\n            <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n            <path d=\\\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\\\"/>\\n        </svg>\\n    \",\r\n    warn: \"\\n        <svg class=\\\"simple-notification-svg\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"#ffffff\\\" width=\\\"64\\\" viewBox=\\\"0 0 64 64\\\" height=\\\"64\\\">\\n          <circle cx=\\\"32.086\\\" cy=\\\"50.142\\\" r=\\\"2.256\\\"/>\\n          <path d=\\\"M30.08 25.012V42.32c0 1.107.897 2.005 2.006 2.005s2.006-.897 2.006-2.005V25.012c0-1.107-.897-2.006-2.006-2.006s-2.006.898-2.006 2.006z\\\"/>\\n          <path d=\\\"M63.766 59.234L33.856 3.082c-.697-1.308-2.844-1.308-3.54 0L.407 59.234c-.331.622-.312 1.372.051 1.975.362.605 1.015.975 1.72.975h59.816c.705 0 1.357-.369 1.721-.975.361-.603.381-1.353.051-1.975zM5.519 58.172L32.086 8.291l26.568 49.881H5.519z\\\"/>\\n        </svg>\\n    \"\r\n};\r\n//# sourceMappingURL=icons.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// P:/uniformPortal/node_modules/angular2-notifications/dist/src/simple-notifications/interfaces/icons.js\n// module id = ../../../../angular2-notifications/dist/src/simple-notifications/interfaces/icons.js\n// module chunks = notify.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar MaxPipe = (function () {\r\n    function MaxPipe() {\r\n    }\r\n    MaxPipe.prototype.transform = function (value) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (!value)\r\n            return value;\r\n        var allowed = args[0];\r\n        var received = value.length;\r\n        if (received > allowed && allowed !== 0) {\r\n            var toCut = allowed - received;\r\n            return value.slice(0, toCut);\r\n        }\r\n        return value;\r\n    };\r\n    return MaxPipe;\r\n}());\r\nMaxPipe.decorators = [\r\n    { type: core_1.Pipe, args: [{ name: 'max' },] },\r\n];\r\n/** @nocollapse */\r\nMaxPipe.ctorParameters = function () { return []; };\r\nexports.MaxPipe = MaxPipe;\r\n//# sourceMappingURL=max.pipe.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// P:/uniformPortal/node_modules/angular2-notifications/dist/src/simple-notifications/pipes/max.pipe.js\n// module id = ../../../../angular2-notifications/dist/src/simple-notifications/pipes/max.pipe.js\n// module chunks = notify.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar Subject_1 = require(\"rxjs/Subject\");\r\nvar icons_1 = require(\"../interfaces/icons\");\r\nvar NotificationsService = (function () {\r\n    function NotificationsService() {\r\n        this.emitter = new Subject_1.Subject();\r\n        this.icons = icons_1.defaultIcons;\r\n    }\r\n    NotificationsService.prototype.set = function (notification, to) {\r\n        notification.id = notification.override && notification.override.id ? notification.override.id : Math.random().toString(36).substring(3);\r\n        notification.click = new core_1.EventEmitter();\r\n        this.emitter.next({ command: 'set', notification: notification, add: to });\r\n        return notification;\r\n    };\r\n    ;\r\n    NotificationsService.prototype.getChangeEmitter = function () {\r\n        return this.emitter;\r\n    };\r\n    //// Access methods\r\n    NotificationsService.prototype.success = function (title, content, override) {\r\n        return this.set({ title: title, content: content || '', type: 'success', icon: this.icons.success, override: override }, true);\r\n    };\r\n    NotificationsService.prototype.error = function (title, content, override) {\r\n        return this.set({ title: title, content: content || '', type: 'error', icon: this.icons.error, override: override }, true);\r\n    };\r\n    NotificationsService.prototype.alert = function (title, content, override) {\r\n        return this.set({ title: title, content: content || '', type: 'alert', icon: this.icons.alert, override: override }, true);\r\n    };\r\n    NotificationsService.prototype.info = function (title, content, override) {\r\n        return this.set({ title: title, content: content || '', type: 'info', icon: this.icons.info, override: override }, true);\r\n    };\r\n    NotificationsService.prototype.warn = function (title, content, override) {\r\n        return this.set({ title: title, content: content || '', type: 'warn', icon: this.icons.warn, override: override }, true);\r\n    };\r\n    NotificationsService.prototype.bare = function (title, content, override) {\r\n        return this.set({ title: title, content: content || '', type: 'bare', icon: 'bare', override: override }, true);\r\n    };\r\n    // With type method\r\n    NotificationsService.prototype.create = function (title, content, type, override) {\r\n        if (content === void 0) { content = ''; }\r\n        if (type === void 0) { type = 'success'; }\r\n        return this.set({ title: title, content: content, type: type, icon: this.icons[type], override: override }, true);\r\n    };\r\n    // HTML Notification method\r\n    NotificationsService.prototype.html = function (html, type, override) {\r\n        if (type === void 0) { type = 'success'; }\r\n        return this.set({ html: html, type: type, icon: 'bare', override: override }, true);\r\n    };\r\n    // Remove all notifications method\r\n    NotificationsService.prototype.remove = function (id) {\r\n        if (id)\r\n            this.emitter.next({ command: 'clean', id: id });\r\n        else\r\n            this.emitter.next({ command: 'cleanAll' });\r\n    };\r\n    return NotificationsService;\r\n}());\r\nNotificationsService.decorators = [\r\n    { type: core_1.Injectable },\r\n];\r\n/** @nocollapse */\r\nNotificationsService.ctorParameters = function () { return []; };\r\nexports.NotificationsService = NotificationsService;\r\n//# sourceMappingURL=notifications.service.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// P:/uniformPortal/node_modules/angular2-notifications/dist/src/simple-notifications/services/notifications.service.js\n// module id = ../../../../angular2-notifications/dist/src/simple-notifications/services/notifications.service.js\n// module chunks = notify.module"],"sourceRoot":"webpack:///"}